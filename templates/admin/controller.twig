<?php

class {{ controller }} extends Controller {
	private $error = array();

	public function index() {
		$this->load->language('{{ path }}');

        $this->document->setTitle($this->language->get('heading_title'));

        $this->load->model('{{ path }}');

        $this->getList();
    }

    public function add() {
        $this->load->language('{{ path }}');

        $this->document->setTitle($this->language->get('heading_title'));

        $this->load->model('{{ path }}');

        if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {
            $this->model_{{ full_identifier }}->add{{ name }}($this->request->post);

            $this->session->data['success'] = $this->language->get('text_success');

            $url = '';

            if (isset($this->request->get['sort'])) {
                $url .= '&sort=' . $this->request->get['sort'];
            }

            if (isset($this->request->get['order'])) {
                $url .= '&order=' . $this->request->get['order'];
            }

            if (isset($this->request->get['page'])) {
                $url .= '&page=' . $this->request->get['page'];
            }

            $this->response->redirect($this->url->link('{{ path }}', 'token=' . $this->session->data['token'] . $url, 'SSL'));
        }

        $this->getForm();
    }

    public function edit() {
        $this->load->language('{{ path }}');

        $this->document->setTitle($this->language->get('heading_title'));

        $this->load->model('{{ path }}');

        if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {
            $this->model_{{ full_identifier }}->edit{{ name }}($this->request->get['{{ identifier }}_id'], $this->request->post);

            $this->session->data['success'] = $this->language->get('text_success');

            $url = '';

            if (isset($this->request->get['sort'])) {
                $url .= '&sort=' . $this->request->get['sort'];
            }

            if (isset($this->request->get['order'])) {
                $url .= '&order=' . $this->request->get['order'];
            }

            if (isset($this->request->get['page'])) {
                $url .= '&page=' . $this->request->get['page'];
            }

            $this->response->redirect($this->url->link('{{ path }}', 'token=' . $this->session->data['token'] . $url, 'SSL'));
        }

        $this->getForm();
    }

    public function delete() {
        $this->load->language('{{ path }}');

        $this->document->setTitle($this->language->get('heading_title'));

        $this->load->model('{{ path }}');

        if (isset($this->request->post['selected']) && $this->validateDelete()) {
            foreach ($this->request->post['selected'] as ${{ identifier }}_id) {
                $this->model_{{ full_identifier }}->delete{{ name }}(${{ identifier }}_id);
            }

            $this->session->data['success'] = $this->language->get('text_success');

            $url = '';

            if (isset($this->request->get['sort'])) {
                $url .= '&sort=' . $this->request->get['sort'];
            }

            if (isset($this->request->get['order'])) {
                $url .= '&order=' . $this->request->get['order'];
            }

            if (isset($this->request->get['page'])) {
                $url .= '&page=' . $this->request->get['page'];
            }

            $this->response->redirect($this->url->link('{{ path }}', 'token=' . $this->session->data['token'] . $url, 'SSL'));
        }

        $this->getList();
    }

    protected function getList() {
        if (isset($this->request->get['sort'])) {
            $sort = $this->request->get['sort'];
        } else {
            $sort = '{{ default_sort }}';
        }

        if (isset($this->request->get['order'])) {
            $order = $this->request->get['order'];
        } else {
            $order = 'ASC';
        }

        if (isset($this->request->get['page'])) {
            $page = $this->request->get['page'];
        } else {
            $page = 1;
        }

        $url = '';

        if (isset($this->request->get['sort'])) {
            $url .= '&sort=' . $this->request->get['sort'];
        }

        if (isset($this->request->get['order'])) {
            $url .= '&order=' . $this->request->get['order'];
        }

        if (isset($this->request->get['page'])) {
            $url .= '&page=' . $this->request->get['page'];
        }

        $data['breadcrumbs'] = array();

        $data['breadcrumbs'][] = array(
            'text' => $this->language->get('text_home'),
            'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], 'SSL')
        );

        $data['breadcrumbs'][] = array(
            'text' => $this->language->get('heading_title'),
            'href' => $this->url->link('{{ path }}', 'token=' . $this->session->data['token'] . $url, 'SSL')
        );

        $data['add'] = $this->url->link('{{ path }}/add', 'token=' . $this->session->data['token'] . $url, 'SSL');
        $data['delete'] = $this->url->link('{{ path }}/delete', 'token=' . $this->session->data['token'] . $url, 'SSL');

        $data['{{ identifier }}s'] = array();

        $filter_data = array(
            'sort'  => $sort,
            'order' => $order,
            'start' => ($page - 1) * $this->config->get('config_limit_admin'),
            'limit' => $this->config->get('config_limit_admin')
        );

        ${{ identifier }}_total = $this->model_{{ full_identifier }}->getTotal{{ name }}s();

        $results = $this->model_{{ full_identifier }}->get{{ name }}s($filter_data);

        foreach ($results as $result) {
            $data['{{ identifier }}s'][] = array(
                '{{ identifier }}_id' => $result['{{ identifier }}_id'],
                {% for att in attributes if att.attribute_list %}
                '{{ att.attribute_name }}' => $result['{{ att.attribute_name }}'],
                {% endfor %}
                'edit' => $this->url->link('{{ path }}/edit', 'token=' . $this->session->data['token'] . '&{{ identifier }}_id=' . $result['{{ identifier }}_id'] . $url, 'SSL')
            );
        }

        $data['heading_title'] = $this->language->get('heading_title');

        $data['text_list'] = $this->language->get('text_list');
        $data['text_no_results'] = $this->language->get('text_no_results');
        $data['text_confirm'] = $this->language->get('text_confirm');

        {% for att in attributes if att.attribute_list %}
            $data['column_{{ att.attribute_name }}'] = $this->language->get('column_{{ att.attribute_name }}');
        {% endfor %}
        $data['column_action'] = $this->language->get('column_action');

        $data['button_add'] = $this->language->get('button_add');
        $data['button_edit'] = $this->language->get('button_edit');
        $data['button_delete'] = $this->language->get('button_delete');

        if (isset($this->error['warning'])) {
            $data['error_warning'] = $this->error['warning'];
        } else {
            $data['error_warning'] = '';
        }

        if (isset($this->session->data['success'])) {
            $data['success'] = $this->session->data['success'];
            unset($this->session->data['success']);
        } else {
            $data['success'] = '';
        }

        if (isset($this->request->post['selected'])) {
            $data['selected'] = (array)$this->request->post['selected'];
        } else {
            $data['selected'] = array();
        }

        $url = '';

        if ($order == 'ASC') {
            $url .= '&order=DESC';
        } else {
            $url .= '&order=ASC';
        }

        if (isset($this->request->get['page'])) {
            $url .= '&page=' . $this->request->get['page'];
        }

        {% for att in attributes if att.attribute_list %}
            $data['sort_{{ att.attribute_name }}'] = $this->url->link('{{ path }}', 'token=' . $this->session->data['token'] . '&sort={{ att.attribute_name }}' . $url, 'SSL');
        {% endfor %}

        $url = '';

        if (isset($this->request->get['sort'])) {
            $url .= '&sort=' . $this->request->get['sort'];
        }

        if (isset($this->request->get['order'])) {
            $url .= '&order=' . $this->request->get['order'];
        }

        $pagination = new Pagination();
        $pagination->total = ${{ identifier }}_total;
        $pagination->page = $page;
        $pagination->limit = $this->config->get('config_limit_admin');
        $pagination->url = $this->url->link('{{ path }}', 'token=' . $this->session->data['token'] . $url . '&page={page}', 'SSL');

        $data['pagination'] = $pagination->render();

        $data['results'] = sprintf($this->language->get('text_pagination'), (${{ identifier }}_total) ? (($page - 1) * $this->config->get('config_limit_admin')) + 1 : 0, ((($page - 1) * $this->config->get('config_limit_admin')) > (${{ identifier }}_total - $this->config->get('config_limit_admin'))) ? ${{ identifier }}_total : ((($page - 1) * $this->config->get('config_limit_admin')) + $this->config->get('config_limit_admin')), ${{ identifier }}_total, ceil(${{ identifier }}_total / $this->config->get('config_limit_admin')));

        $data['sort'] = $sort;
        $data['order'] = $order;

        $data['header'] = $this->load->controller('common/header');
        $data['column_left'] = $this->load->controller('common/column_left');
        $data['footer'] = $this->load->controller('common/footer');

        $this->response->setOutput($this->load->view('{{ path }}_list.tpl', $data));
    }

    protected function getForm() {
        $data['heading_title'] = $this->language->get('heading_title');

        $data['text_form'] = !isset($this->request->get['{{ identifier }}_id']) ? $this->language->get('text_add') : $this->language->get('text_edit');

        {% for att in attributes %}
        $data['entry_{{ att.attribute_name }}'] = $this->language->get('entry_{{ att.attribute_name }}');
        {% endfor %}

        $data['button_save'] = $this->language->get('button_save');
        $data['button_cancel'] = $this->language->get('button_cancel');

        if (isset($this->error['warning'])) {
            $data['error_warning'] = $this->error['warning'];
        } else {
            $data['error_warning'] = '';
        }

        {% for att in attributes if att.attribute_required %}
        if (isset($this->error['{{ att.attribute_name }}'])) {
            $data['error_{{ att.attribute_name }}'] = $this->error['{{ att.attribute_name }}'];
        }
        {% endfor %}

        $url = '';

        if (isset($this->request->get['sort'])) {
            $url .= '&sort=' . $this->request->get['sort'];
        }

        if (isset($this->request->get['order'])) {
            $url .= '&order=' . $this->request->get['order'];
        }

        if (isset($this->request->get['page'])) {
            $url .= '&page=' . $this->request->get['page'];
        }

        $data['breadcrumbs'] = array();

        $data['breadcrumbs'][] = array(
            'text' => $this->language->get('text_home'),
            'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], 'SSL')
        );

        $data['breadcrumbs'][] = array(
            'text' => $this->language->get('heading_title'),
            'href' => $this->url->link('{{ path }}', 'token=' . $this->session->data['token'] . $url, 'SSL')
        );

        if (!isset($this->request->get['{{ identifier }}_id'])) {
            $data['action'] = $this->url->link('{{ path }}/add', 'token=' . $this->session->data['token'] . $url, 'SSL');
        } else {
            $data['action'] = $this->url->link('{{ path }}/edit', 'token=' . $this->session->data['token'] . '&{{ identifier }}_id=' . $this->request->get['{{ identifier }}_id'] . $url, 'SSL');
        }

        $data['cancel'] = $this->url->link('{{ path }}', 'token=' . $this->session->data['token'] . $url, 'SSL');

        if (isset($this->request->get['{{ identifier }}_id']) && ($this->request->server['REQUEST_METHOD'] != 'POST')) {
            ${{ identifier }}_info = $this->model_{{ full_identifier }}->get{{ name }}($this->request->get['{{ identifier }}_id']);
        }

        {% for att in attributes %}
        if (isset($this->request->post['{{ att.attribute_name }}'])) {
            $data['{{ att.attribute_name }}'] = $this->request->post['{{ att.attribute_name }}'];
        } elseif (!empty(${{ identifier }}_info)) {
            $data['{{ att.attribute_name }}'] = ${{ identifier }}_info['{{ att.attribute_name }}'];
        } else {
            $data['{{ att.attribute_name }}'] = '';
        }
        {% endfor %}

        $data['header'] = $this->load->controller('common/header');
        $data['column_left'] = $this->load->controller('common/column_left');
        $data['footer'] = $this->load->controller('common/footer');

        $this->response->setOutput($this->load->view('{{ path }}_form.tpl', $data));
    }

    protected function validateForm() {
        if (!$this->user->hasPermission('modify', '{{ path }}')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        {% for att in attributes %}
        {% if att.attribute_required and (att.attribute_type == 'varchar') %}
        if ((utf8_strlen($this->request->post['{{ att.attribute_name }}']) < {{ att.attribute_min_size }}) || (utf8_strlen($this->request->post['{{ att.attribute_name }}']) > {{ att.attribute_max_size }})) {
            $this->error['{{ att.attribute_name }}'] = $this->language->get('error_{{ att.attribute_name }}');
        }
        {% elseif att.attribute_required and ((att.attribute_type == 'text') or (att.attribute_type == 'htmltext') or (att.attribute_type == 'decimal') or (att.attribute_type == 'int') or (att.attribute_type == 'date')) %}
        if (empty($this->request->post['{{ att.attribute_name }}'])) {
            $this->error['{{ att.attribute_name }}'] = $this->language->get('error_{{ att.attribute_name }}');
        }
        {% endif %}
        {% endfor %}

        if ($this->error && !isset($this->error['warning'])) {
            $this->error['warning'] = $this->language->get('error_warning');
        }

        return !$this->error;
    }

    protected function validateDelete() {
        if (!$this->user->hasPermission('modify', '{{ path }}')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        return !$this->error;
    }
}